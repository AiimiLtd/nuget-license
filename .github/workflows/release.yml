name: release

on: 
  push:
    tags:
      - 'v*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Setup dotnet 3.0.100
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.100' # SDK Version to use.
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
    # dotnet restore
    - name: restore
      run: dotnet restore
    # dotnet build and publish
    - name: Build with dotnet
      run: dotnet build --configuration Release
    # dotnet test
    - name: test
      run: dotnet test
    # dotnet create package
    - name: Create the package
      run: dotnet pack --configuration Release
    # publish the package
    - name: Publish the artifact
      run: dotnet publish -c Release -o ./artifacts
    # Add nuget package
    - name: Nuget package
      run: dotnet pack -c Release -o ./artifacts
    # Zip Artifacts
    - name: Zip artifacts
      uses: montudor/action-zip@v0.1.0
      with:
        args: zip -qq -r ./release.zip ./artifacts
    - name: Create release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release.zip
        asset_name: release.zip
        asset_content_type: application/zip